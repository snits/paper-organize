# SPDX-License-Identifier: MIT
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run tests
      run: |
        uv run pytest --cov=paperorganize --cov-report=xml --cov-report=term-missing
    
    - name: Type checking with MyPy
      run: |
        uv run mypy src/ tests/
    
    - name: Linting with Ruff
      run: |
        uv run ruff check src/ tests/
    
    - name: Code formatting check
      run: |
        uv run ruff format --check src/ tests/
    
    - name: Upload coverage to Codecov
      continue-on-error: true
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    
    - name: Install dependencies
      run: uv sync --extra dev
    
    - name: Run Safety CLI to check for vulnerabilities
      uses: pyupio/safety-action@v1
      with:
        api-key: ${{ secrets.SAFETY_API_KEY }}
    
    - name: Run bandit security check
      run: |
        uv add --dev bandit
        uv run bandit -r src/

  integration:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    
    - name: Install package
      run: |
        uv sync
    
    - name: Test CLI installation
      run: |
        uv run paper-organize --help
    
    - name: Test real download (if not in PR)
      if: github.event_name == 'push'
      run: |
        # Run from project directory so uv can find the project environment
        uv run paper-organize https://httpbin.org/bytes/1024 --no-auto-name --dir /tmp
        test -f /tmp/paper.pdf